
private fun loadData() {
    var query = db.collection("users")
            val options: FirestoreRecyclerOptions<UserModel> =
                FirestoreRecyclerOptions.Builder<UserModel>()
                    .setQuery(query, object : SnapshotParser<UserModel> {
                        override fun parseSnapshot(snapshot: DocumentSnapshot): UserModel {
                            return UserModel(snapshot.id, snapshot.get("firstName").toString(), snapshot.get("lastName").toString())
                        }

                    })
                    .build()

            adapter = object : FirestoreRecyclerAdapter<UserModel, ViewHolder>(options) {

                override fun onCreateViewHolder(group: ViewGroup, i: Int): ViewHolder {
                    val view: View = LayoutInflater.from(group.context)
                        .inflate(com.example.testcloudfirebase.R.layout.row_user, group, false)
                    return ViewHolder(view)
                }

                override fun onBindViewHolder(holder: ViewHolder, position: Int, model: UserModel) {
                    holder.textView_firstName.text = model.firstName
                    holder.textView_lastName.text = model.lastName
                    holder.itemView.setOnClickListener {
                        editText_id.text = Editable.Factory.getInstance().newEditable(model.id)
                        editText_firstName.text = Editable.Factory.getInstance().newEditable(model.firstName)
                        editText_lastName.text = Editable.Factory.getInstance().newEditable(model.lastName)
                    }
                }


            }
            adapter.startListening()
            recyclerView_info.adapter = adapter
}

private fun set_recyclerView_user() {
        recyclerView_info.setHasFixedSize(true)
        var layoutManager =
            LinearLayoutManager(
                this@ListActivity,
                LinearLayoutManager.VERTICAL, false
            )
        recyclerView_info.layoutManager = layoutManager

    }